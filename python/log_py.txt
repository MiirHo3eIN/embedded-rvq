The selected test is cdist

torch.Size([10, 2]) torch.Size([10, 2])
x = tensor([1., 2.]),
 embeds = tensor([1., 2.])
Value Generated by the Vector Quantization Repo Code:
torch.Size([10]) torch.Size([10])
torch.Size([10, 10])
tensor([[ 0.0000,  2.8284,  5.6569,  8.4853, 11.3137, 14.1421, 16.9706, 19.7990,
         22.6274, 25.4558],
        [ 2.8284,  0.0000,  2.8284,  5.6569,  8.4853, 11.3137, 14.1421, 16.9706,
         19.7990, 22.6274],
        [ 5.6569,  2.8284,  0.0000,  2.8284,  5.6569,  8.4853, 11.3137, 14.1421,
         16.9706, 19.7990],
        [ 8.4853,  5.6569,  2.8284,  0.0000,  2.8284,  5.6569,  8.4853, 11.3137,
         14.1421, 16.9706],
        [11.3137,  8.4853,  5.6569,  2.8284,  0.0000,  2.8284,  5.6569,  8.4853,
         11.3137, 14.1421],
        [14.1421, 11.3137,  8.4853,  5.6569,  2.8284,  0.0000,  2.8284,  5.6569,
          8.4853, 11.3137],
        [16.9706, 14.1421, 11.3137,  8.4853,  5.6569,  2.8284,  0.0000,  2.8284,
          5.6569,  8.4853],
        [19.7990, 16.9706, 14.1421, 11.3137,  8.4853,  5.6569,  2.8284,  0.0000,
          2.8284,  5.6569],
        [22.6274, 19.7990, 16.9706, 14.1421, 11.3137,  8.4853,  5.6569,  2.8284,
          0.0000,  2.8284],
        [25.4558, 22.6274, 19.7990, 16.9706, 14.1421, 11.3137,  8.4853,  5.6569,
          2.8284,  0.0000]])
**********
The implemented version in C:
xy:
[[  -10.   -22.   -34.   -46.   -58.   -70.   -82.   -94.  -106.  -118.]
 [  -22.   -50.   -78.  -106.  -134.  -162.  -190.  -218.  -246.  -274.]
 [  -34.   -78.  -122.  -166.  -210.  -254.  -298.  -342.  -386.  -430.]
 [  -46.  -106.  -166.  -226.  -286.  -346.  -406.  -466.  -526.  -586.]
 [  -58.  -134.  -210.  -286.  -362.  -438.  -514.  -590.  -666.  -742.]
 [  -70.  -162.  -254.  -346.  -438.  -530.  -622.  -714.  -806.  -898.]
 [  -82.  -190.  -298.  -406.  -514.  -622.  -730.  -838.  -946. -1054.]
 [  -94.  -218.  -342.  -466.  -590.  -714.  -838.  -962. -1086. -1210.]
 [ -106.  -246.  -386.  -526.  -666.  -806.  -946. -1086. -1226. -1366.]
 [ -118.  -274.  -430.  -586.  -742.  -898. -1054. -1210. -1366. -1522.]]
x:
[  5.  25.  61. 113. 181. 265. 365. 481. 613. 761.]
y:
[  5.  25.  61. 113. 181. 265. 365. 481. 613. 761.]
torch.Size([10]) torch.Size([10])
torch.Size([10, 1]) torch.Size([1, 10])
x + y:
[[  10.   30.   66.  118.  186.  270.  370.  486.  618.  766.]
 [  30.   50.   86.  138.  206.  290.  390.  506.  638.  786.]
 [  66.   86.  122.  174.  242.  326.  426.  542.  674.  822.]
 [ 118.  138.  174.  226.  294.  378.  478.  594.  726.  874.]
 [ 186.  206.  242.  294.  362.  446.  546.  662.  794.  942.]
 [ 270.  290.  326.  378.  446.  530.  630.  746.  878. 1026.]
 [ 370.  390.  426.  478.  546.  630.  730.  846.  978. 1126.]
 [ 486.  506.  542.  594.  662.  746.  846.  962. 1094. 1242.]
 [ 618.  638.  674.  726.  794.  878.  978. 1094. 1226. 1374.]
 [ 766.  786.  822.  874.  942. 1026. 1126. 1242. 1374. 1522.]]
Fianl Summation:
[[  0.   8.  32.  72. 128. 200. 288. 392. 512. 648.]
 [  8.   0.   8.  32.  72. 128. 200. 288. 392. 512.]
 [ 32.   8.   0.   8.  32.  72. 128. 200. 288. 392.]
 [ 72.  32.   8.   0.   8.  32.  72. 128. 200. 288.]
 [128.  72.  32.   8.   0.   8.  32.  72. 128. 200.]
 [200. 128.  72.  32.   8.   0.   8.  32.  72. 128.]
 [288. 200. 128.  72.  32.   8.   0.   8.  32.  72.]
 [392. 288. 200. 128.  72.  32.   8.   0.   8.  32.]
 [512. 392. 288. 200. 128.  72.  32.   8.   0.   8.]
 [648. 512. 392. 288. 200. 128.  72.  32.   8.   0.]]
tensor([[ 0.0000,  2.8284,  5.6569,  8.4853, 11.3137, 14.1421, 16.9706, 19.7990,
         22.6274, 25.4558],
        [ 2.8284,  0.0000,  2.8284,  5.6569,  8.4853, 11.3137, 14.1421, 16.9706,
         19.7990, 22.6274],
        [ 5.6569,  2.8284,  0.0000,  2.8284,  5.6569,  8.4853, 11.3137, 14.1421,
         16.9706, 19.7990],
        [ 8.4853,  5.6569,  2.8284,  0.0000,  2.8284,  5.6569,  8.4853, 11.3137,
         14.1421, 16.9706],
        [11.3137,  8.4853,  5.6569,  2.8284,  0.0000,  2.8284,  5.6569,  8.4853,
         11.3137, 14.1421],
        [14.1421, 11.3137,  8.4853,  5.6569,  2.8284,  0.0000,  2.8284,  5.6569,
          8.4853, 11.3137],
        [16.9706, 14.1421, 11.3137,  8.4853,  5.6569,  2.8284,  0.0000,  2.8284,
          5.6569,  8.4853],
        [19.7990, 16.9706, 14.1421, 11.3137,  8.4853,  5.6569,  2.8284,  0.0000,
          2.8284,  5.6569],
        [22.6274, 19.7990, 16.9706, 14.1421, 11.3137,  8.4853,  5.6569,  2.8284,
          0.0000,  2.8284],
        [25.4558, 22.6274, 19.7990, 16.9706, 14.1421, 11.3137,  8.4853,  5.6569,
          2.8284,  0.0000]])
